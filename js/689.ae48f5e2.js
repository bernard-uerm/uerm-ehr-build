"use strict";(self["webpackChunkuerm_ehr"]=self["webpackChunkuerm_ehr"]||[]).push([[689],{2230:(e,t,i)=>{i.r(t),i.d(t,{default:()=>b});var n=i(3673);const o=(0,n._)("h5",null,"IMMUNIZATION",-1),c={class:"row"},l={class:"col-10"};function a(e,t,i,a,s,r){const d=(0,n.up)("q-tree"),f=(0,n.up)("q-table"),u=(0,n.up)("q-btn"),_=(0,n.up)("q-card"),h=(0,n.up)("q-dialog"),p=(0,n.up)("q-page");return(0,n.wg)(),(0,n.j4)(p,null,{default:(0,n.w5)((()=>[o,(0,n._)("div",c,[(0,n.Wm)(d,{class:"col-2",nodes:e.patient_clinical_notes,"node-key":"code","label-key":"name","tick-strategy":"strict",ticked:e.ticked,"onUpdate:ticked":t[0]||(t[0]=t=>e.ticked=t)},null,8,["nodes","ticked"]),(0,n._)("div",l,[((0,n.wg)(!0),(0,n.iD)(n.HY,null,(0,n.Ko)(e.ticked,(i=>((0,n.wg)(),(0,n.iD)("div",{key:`ticked-${i}`},[e.patient_clinical_note_details[i]?((0,n.wg)(),(0,n.j4)(f,{key:0,class:"q-ma-lg",title:e.patient_clinical_note_details[i].label,rows:e.patient_clinical_note_details[i].rows,columns:e.patient_clinical_note_details[i].fields,"row-key":"code",onRowClick:t[1]||(t[1]=(t,i,n)=>e.dialog_visible=!0)},null,8,["title","rows","columns"])):(0,n.kq)("",!0)])))),128))])]),(0,n.Wm)(h,{modelValue:e.dialog_visible,"onUpdate:modelValue":t[3]||(t[3]=t=>e.dialog_visible=t),"no-esc-dismiss":"","no-backdrop-dismiss":""},{default:(0,n.w5)((()=>[(0,n.Wm)(_,null,{default:(0,n.w5)((()=>[(0,n.Wm)(u,{flat:"",label:"CANCEL",onClick:t[2]||(t[2]=t=>e.dialog_visible=!1)})])),_:1})])),_:1},8,["modelValue"])])),_:1})}i(71),i(2100);var s=i(3617);const r=(0,n.aZ)({name:"EMR-Test",data:function(){return{dialog_visible:!1,ticked:[],patient_clinical_notes:[],patient_clinical_note_details:{}}},watch:{ticked:function(e){console.log(e)}},mounted:async function(){await this.getClinicalNotes(),await this.getPatientClinicalEncounters(),await this.init()},computed:{...(0,s.Se)({encounterCases:"encounters/encounterCases",clinicalEncounters:"encounters/clinicalEncounters",clinicalNotes:"clinicalNotes/clinicalNotes"})},methods:{generateTree:function(e=[]){let t=!1;const i=[];function n(e,i){for(const o of e){if(o.code===i.parent_clinical_note_code)return i.children=[],o.children.push(i),void(t=!0);n(o.children,i)}}if(function(){for(const t of e)if(t.code===t.parent_clinical_note_code)return!0}())throw{error:"Self parent exists in the list."};if(function(){for(const t of e){if(null===t.parent_clinical_note_code)continue;let i=!0;for(const n of e)if(n.code!==t.code&&t.parent_clinical_note_code===n.code){i=!1;break}if(i)return!0}return!1}())throw{error:"Orphan exists in the list."};if(function(){for(let t=e.length-1;t>-1;t--)null===e[t].parent_clinical_note_code&&(e[t].children=[],i.push(e[t]),e.splice(t,1))}(),0===i.length)throw{error:"There is no ancestor in the list."};return function(){for(;e.length>0;)for(let o=e.length-1;o>-1;--o)if(n(i,e[o]),t){e.splice(o,1),t=!1;break}}(),i},getPatientClinicalNotes(e,t){const i=[];for(const n of t){let t=!1;for(const e of i)if(e.code===n.clinical_note_code){t=!0;break}if(!t)for(const o of e)if(o.code===n.clinical_note_code){i.push(o);break}}return i},getParentClinicalNote:function(e,t){const i=[];for(const n of t){for(const t of e)if(n.parent_clinical_note_code===t.code){i.push(t);break}i.push(n)}return i},getPatientClinicalNoteDetails:function(e){const t={};for(const i of e){void 0===t[i.clinical_note_code]&&(t[i.clinical_note_code]={label:i.clinical_note||"",fields:[],rows:[]});for(const e of i.result_format.fields){let n=!1;for(const o of t[i.clinical_note_code].fields)if(o.field===e.code){n=!0;break}n||t[i.clinical_note_code].fields.push({field:e.code,label:e.name})}}for(const i of e)for(const e in t)if(e===i.clinical_note_code){const n={};for(const e of i.result_format.fields)void 0===n[e.code]&&(n[e.code]=e.value);t[e].rows.push(n)}return t},getPatientClinicalEncounters:async function(){const e={patientNo:"1100038194",clinicalCategoryCode:"allergies",checking:!0,byCategoryCode:!0};await this.$store.dispatch("encounters/getClinicalEncounters",e)},async getClinicalNotes(){const e={sectionType:"ehr"};await this.$store.dispatch("clinicalNotes/fetchClinicalNotes",e)},async init(){const e=JSON.parse(JSON.stringify(this.clinicalNotes)),t=JSON.parse(JSON.stringify(this.clinicalEncounters));let i=this.getPatientClinicalNotes(e,t);i=this.getParentClinicalNote(e,i),i=this.generateTree(i),this.patient_clinical_notes=i,this.patient_clinical_note_details=this.getPatientClinicalNoteDetails(t)}}});var d=i(4260),f=i(4379),u=i(5078),_=i(8107),h=i(6778),p=i(151),g=i(2165),k=i(7518),w=i.n(k);const C=(0,d.Z)(r,[["render",a]]),b=C;w()(r,"components",{QPage:f.Z,QTree:u.Z,QTable:_.Z,QDialog:h.Z,QCard:p.Z,QBtn:g.Z})}}]);