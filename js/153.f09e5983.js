"use strict";(self["webpackChunkuerm_ehr"]=self["webpackChunkuerm_ehr"]||[]).push([[153],{9040:(e,t,i)=>{i.r(t),i.d(t,{default:()=>me});var l=i(3673),o=i(2323);const n={key:0,class:"flex flex-center"},a={key:1},s={key:0},c={class:"row"},r={class:"col-12"},d={key:0,class:"col-12 flex flex-center",style:{height:"500px"}},u=(0,l._)("div",{class:"text-overline q-pt-md"},"LOADING ...",-1),h={key:1,class:"col-12"},p={key:1,class:"row justify-center"},m=(0,l._)("div",{class:"col-12 text-center text-weight-light text-h5"}," MULTIPLE CASE NUMBER DETECTED, PLEASE SELECT THE APPROPRIATE CASE ",-1),g=[m];function N(e,t,i,m,N,f){const C=(0,l.up)("PatientEncounterInfo"),w=(0,l.up)("q-spinner-cube"),y=(0,l.up)("ClinicalNoteResults"),_=(0,l.up)("q-page");return(0,l.wg)(),(0,l.j4)(_,{class:(0,o.C_)({"flex flex-center":e.bools.isMultipleCaseNo})},{default:(0,l.w5)((()=>[this.bools.isLoading?((0,l.wg)(),(0,l.iD)("div",n)):((0,l.wg)(),(0,l.iD)("div",a,[e.bools.isMultipleCaseNo?((0,l.wg)(),(0,l.iD)("div",p,g)):((0,l.wg)(),(0,l.iD)("div",s,[(0,l._)("div",c,[(0,l._)("div",r,[(0,l.Wm)(C,{encounterCases:this.encounterCases,clinicalNoteCategoryTree:this.generalNotes},null,8,["encounterCases","clinicalNoteCategoryTree"])]),this.loadTree?((0,l.wg)(),(0,l.iD)("div",d,[(0,l._)("div",null,[(0,l.Wm)(w,{color:"blue-10",size:"5.5em"}),u])])):((0,l.wg)(),(0,l.iD)("div",h,[this.encounterCases.length>0?((0,l.wg)(),(0,l.j4)(y,{key:0,clinicalNoteTree:this.clinicalNoteCategoryTree,clinicalEncounters:this.clinicalEncounters,loadTree:this.loadTree,noteMode:this.bools.noteMode,onOpenEntryNotes:e.setEntryNotes,onSetUpdateNote:e.setUpdateNote},null,8,["clinicalNoteTree","clinicalEncounters","loadTree","noteMode","onOpenEntryNotes","onSetUpdateNote"])):(0,l.kq)("",!0)]))])]))]))])),_:1},8,["class"])}var f=i(3617),C=i(8880);const w={class:"q-px-lg relative-position"},y={class:"text-weight-light text-h5 row justify-evenly q-gutter-md q-py-md"},_={class:"col-auto column"},b=(0,l._)("div",{class:"text-xs text-weight-medium"},"PATIENT",-1),v={class:"col-2 column"},E=(0,l._)("div",{class:"text-xs text-weight-medium"},"CASE NO",-1),D={class:"text-md"},I={class:"col-auto text-uppercase text-xs text-weight-medium"},x={class:"col text-md text-uppercase"},T={class:"row q-mt-md"},k={class:"col-md-9 q-px-sm"},q={class:"col-md-3 q-px-sm"};function Z(e,t,i,n,a,s){const c=(0,l.up)("q-icon"),r=(0,l.up)("q-separator"),d=(0,l.up)("q-card-section"),u=(0,l.up)("ClinicalNotesDashboard"),h=(0,l.up)("PatientChart"),p=(0,l.up)("TestResult"),m=(0,l.up)("PatientInfo"),g=(0,l.up)("q-btn"),N=(0,l.up)("q-card-actions"),f=(0,l.up)("q-card"),Z=(0,l.up)("q-dialog");return(0,l.wg)(),(0,l.iD)("div",null,[(0,l._)("div",w,[(0,l._)("div",y,[(0,l._)("div",_,[b,(0,l._)("div",{class:"text-weight-bold cursor-pointer",onMouseover:t[0]||(t[0]=t=>e.displayEye(e.bools.displayEye)),onMouseout:t[1]||(t[1]=t=>e.displayEye(e.bools.displayEye)),onClick:t[2]||(t[2]=(0,C.iM)((t=>e.bools.isDialogOpen=!0),["prevent"]))},[(0,l.Uk)((0,o.zw)(`${e.caseInfo.lastname}, ${e.caseInfo.firstname} ${e.caseInfo.middlename}`)+" ",1),e.bools.displayEye?((0,l.wg)(),(0,l.j4)(c,{key:0,class:"q-pb-xs q-pl-sm",name:"fa fa-eye"})):(0,l.kq)("",!0)],32)]),(0,l._)("div",v,[E,(0,l._)("div",D,(0,o.zw)(e.caseInfo.caseno),1)]),((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(e.encounterInfo,(t=>((0,l.wg)(),(0,l.iD)("div",{class:"col-auto column",key:t.label},[(0,l._)("div",I,(0,o.zw)(t.label),1),(0,l._)("div",x,(0,o.zw)(e.caseInfo[t.field]),1)])))),128))])]),(0,l.Wm)(r),(0,l.Wm)(Z,{"full-height":"","full-width":"",persistent:"",modelValue:e.bools.isDialogOpen,"onUpdate:modelValue":t[4]||(t[4]=t=>e.bools.isDialogOpen=t)},{default:(0,l.w5)((()=>[(0,l.Wm)(f,{class:"column"},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{class:"col-auto text-h6 text-weight-light bg-dark text-white"},{default:(0,l.w5)((()=>[(0,l.Uk)(" Patient Dashboard: "+(0,o.zw)(`${e.caseInfo.lastname}, ${e.caseInfo.firstname} ${e.caseInfo.middlename}`),1)])),_:1}),(0,l.Wm)(d,{class:"col",style:{overflow:"auto"}},{default:(0,l.w5)((()=>[(0,l._)("div",T,[(0,l._)("div",k,[(0,l.Wm)(u,{currentClinicalNotes:this.clinicalEncounterLists},null,8,["currentClinicalNotes"]),(0,l.Wm)(h,{patientno:e.caseInfo.patientno},null,8,["patientno"]),(0,l.Wm)(p,{patientno:e.caseInfo.patientno},null,8,["patientno"])]),(0,l._)("div",q,[(0,l.Wm)(m,{patientno:e.caseInfo.patientno},null,8,["patientno"])])])])),_:1}),(0,l.Wm)(N,{align:"right",class:"col-auto"},{default:(0,l.w5)((()=>[(0,l.Wm)(g,{color:"negative",label:"Close",flat:"",onClick:t[3]||(t[3]=(0,C.iM)((t=>e.bools.isDialogOpen=!1),["prevent"])),icon:"fas fa-times"})])),_:1})])),_:1})])),_:1},8,["modelValue"])])}var L=i(303),M=i(7198),W=i(250);const R={class:"row"},P={key:0,class:"bg-red-2 q-pa-md"},S={class:"row justify-between items-center"},Q={class:"column"},$=(0,l._)("div",{class:"text-xs"},"RESULT DATE",-1),O={class:"absolute-top-right"},U={class:"row justify-between"},A={class:"text-uppercase"};function z(e,t,i,n,a,s){const c=(0,l.up)("Heading"),r=(0,l.up)("q-btn"),d=(0,l.up)("q-scroll-area"),u=(0,l.up)("q-card-section"),h=(0,l.up)("q-card"),p=(0,l.up)("q-dialog");return(0,l.wg)(),(0,l.iD)("div",null,[(0,l.Wm)(c,{text:"Clinical Notes"}),(0,l.Wm)(d,{style:{height:"110px"},visible:""},{default:(0,l.w5)((()=>[(0,l._)("div",R,[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(this.currentClinicalNotes,(t=>((0,l.wg)(),(0,l.iD)("div",{class:"col-auto",key:t},[(0,l.Wm)(r,{label:t.clinical_note+" - "+t.user_name.toUpperCase()+" - "+new Date(t.update_datetime).toDateString().substring(4,15),flat:"",rounded:"",icon:"fas fa-eye",color:"primary",onClick:i=>e.openClinicalNoteDialog(t)},null,8,["label","onClick"])])))),128))]),0!=e.currentClinicalNotes.length||e.bools.isLoading?(0,l.kq)("",!0):((0,l.wg)(),(0,l.iD)("div",P," No result Available "))])),_:1}),this.clinicalNoteResult.length>0?((0,l.wg)(),(0,l.j4)(p,{key:0,modelValue:this.bools.clinicalNoteDialog,"onUpdate:modelValue":t[1]||(t[1]=e=>this.bools.clinicalNoteDialog=e),persistent:""},{default:(0,l.w5)((()=>[(0,l.Wm)(h,{square:"",style:{width:"700px","max-width":"80vw"}},{default:(0,l.w5)((()=>[(0,l.Wm)(u,{class:"text-h5 text-weight-light bg-dark text-white"},{default:(0,l.w5)((()=>[(0,l._)("div",S,[(0,l._)("div",null,(0,o.zw)(this.clinicalNoteCardDetails.title),1),(0,l._)("div",Q,[$,(0,l._)("div",null,(0,o.zw)(new Date(this.clinicalNoteCardDetails.datetime).toDateString().substring(4,15)),1)])]),(0,l._)("div",O,[(0,l.Wm)(r,{flat:"",round:"",icon:"fa fa-times",onClick:t[0]||(t[0]=t=>e.bools.clinicalNoteDialog=!1),color:"negative"})])])),_:1}),(0,l.Wm)(u,{style:{height:"540px"}},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{class:"fit",visible:""},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(this.clinicalNoteResult,(e=>((0,l.wg)(),(0,l.iD)("div",{class:"q-pb-md",key:e.label},[(0,l.Wm)(c,{text:e.opts.label},null,8,["text"]),(0,l.Wm)(h,{class:"shadow-0 q-pa-md"},{default:(0,l.w5)((()=>[(0,l._)("div",null,(0,o.zw)(e.value),1)])),_:2},1024)])))),128))])),_:1})])),_:1}),(0,l.Wm)(u,{class:"text-h5 text-weight-light bg-dark text-white"},{default:(0,l.w5)((()=>[(0,l._)("div",U,[(0,l._)("div",A,(0,o.zw)(this.clinicalNoteCardDetails.user),1)])])),_:1})])),_:1})])),_:1},8,["modelValue"])):(0,l.kq)("",!0)])}var j=i(4019);const H=(0,l.aZ)({name:"ClinicalNoteDashboard",props:["currentClinicalNotes"],components:{Heading:j.Z},data(){return{bools:{isLoading:!1,clinicalNoteDialog:!1},clinicalNoteResult:[],clinicalNoteCardDetails:{title:"",user:"",datetime:""}}},methods:{openClinicalNoteDialog(e){this.clinicalNoteCardDetails.title=e.clinical_note,this.clinicalNoteCardDetails.user=e.user_name,this.clinicalNoteCardDetails.datetime=e.formattedUpdateDatetime,this.clinicalNoteResult=e.result_format.fields,this.bools.clinicalNoteDialog=!0}}});var V=i(4260),B=i(7704),F=i(2165),G=i(6778),K=i(151),Y=i(5589),J=i(7518),X=i.n(J);const ee=(0,V.Z)(H,[["render",z]]),te=ee;X()(H,"components",{QScrollArea:B.Z,QBtn:F.Z,QDialog:G.Z,QCard:K.Z,QCardSection:Y.Z});const ie=(0,l.aZ)({name:"PatientEncounterInfo",components:{PatientChart:L.Z,TestResult:M.Z,PatientInfo:W.Z,ClinicalNotesDashboard:te},data(){return{bools:{displayEye:!1,isDialogOpen:!1},encounterInfo:[{label:"Category",field:"category"},{label:"Room",field:"room"},{label:"Unit",field:"unit"},{label:"Ward",field:"ward"},{label:"Admission Date",field:"admitted"},{label:"Discharge Date",field:"discharged"}]}},computed:{...(0,f.Se)({encounterCases:"encounters/encounterCases",clinicalEncounters:"encounters/clinicalEncounters",generalNotes:"clinicalNotes/generalNotes",clinicalNotes:"clinicalNotes/clinicalNotes",patientGeneralNotes:"encounters/patientGeneralNotes"}),caseInfo(){return 0==this.encounterCases.length?{}:this.encounterCases.map((e=>({caseno:e.case_no,patientno:e.patient_no,lastname:e.last_name,firstname:e.first_name,middlename:e.middle_name,gender:e.sex,birthdate:e.birthDate,category:e.patient_category,room:e.room,unit:e.room_unit,ward:e.ward,admitted:new Date(e.datetime_admitted).toDateString(),discharged:e.datetime_discharged?new Date(e.datetime_discharged).toDateString():"",chiefComplaint:e.chief_complaint})))[0]}},mounted(){this.initialize()},methods:{initialize(){this.clinicalEncounterLists=this.clinicalEncounters},async displayEye(e){this.bools.displayEye=!e}}});var le=i(4554),oe=i(5869),ne=i(9367);const ae=(0,V.Z)(ie,[["render",Z]]),se=ae;X()(ie,"components",{QIcon:le.Z,QSeparator:oe.Z,QDialog:G.Z,QCard:K.Z,QCardSection:Y.Z,QCardActions:ne.Z,QBtn:F.Z});var ce=i(8802);const re=(0,l.aZ)({name:"EMR",components:{ClinicalNoteResults:ce.Z,PatientEncounterInfo:se},data(){return{bools:{isMultipleCaseNo:!0,isLoading:!1,showInputFields:!1,loadTree:!1,isDialogOpen:!1,isGeneralInfoOpen:!1,generalNoteLoading:!1,generalEntryLoading:!1,enableEntry:!1,noteMode:!1},clinicalNoteCategoryTree:[]}},computed:{...(0,f.Se)({visitEncounterNotes:"clinicalNotes/visitEncounterNotes",admissionEncounterNotes:"clinicalNotes/admissionEncounterNotes",generalNotes:"clinicalNotes/generalNotes",rightDrawer:"helpers/drawerRight",colorEMR:"helpers/colorEMR",clinicalNoteCategories:"clinicalNotes/clinicalNoteCategories",showClinicalNoteDetails:"helpers/showClinicalNoteDetails",userRole:"helpers/userRole",encounterCases:"encounters/encounterCases",clinicalNotes:"clinicalNotes/clinicalNotes",infiniteScroll:"helpers/infiniteScroll",clinicalEncounters:"encounters/clinicalEncounters",clinicalEncountersPage:"encounters/clinicalEncountersPage",clinicalEncountersRows:"encounters/clinicalEncountersRows",loadTree:"helpers/loadTree"})},mounted(){this.mountFunctions()},methods:{async mountFunctions(){await this.checkCase(),await this.formatClinicalNoteCategoryTree(),await this.fetchNotesCategories(),await this.checkPatientType(),await this.fetchClinicalNotes()},async formatClinicalNoteCategoryTree(){this.bools.loadTree=!0,setTimeout((async()=>{this.bools.loadTree=!1}),1500),this.clinicalNoteCat=this.clinicalNoteCategoryTree},async fetchClinicalNotes(){let e="";e={patientNo:this.encounterCases[0].patientID,clinicalCategoryCode:null,checking:!0,byCategoryCode:!1},await this.$store.dispatch("encounters/getClinicalEncounters",e),this.clinicalEncounterLists=this.clinicalEncounters,this.bools.generalNoteLoading=!1},setUpdateNote(e){this.splitterModel=75,this.bools.noteMode=!0,this.bools.enableEntry=!0;const t={clinical_note_code:e.clinical_note_code,clinical_note:e.clinical_note_name,result_format:JSON.parse(e.result_format),clinical_encounter_id:parseInt(e.clinical_encounter_id)};this.setPatientNotes(t)},setPatientNotes(e){this.bools.generalEntryLoading=!0,this.bools.generalNoteLoading=!0,setTimeout((()=>{this.editNoteInfo=e;const t={name:e.clinical_note,code:e.clinical_note_code,template_format:e.result_format,title:e.clinical_note};this.setClinicalNoteInfo(t,!1),this.bools.generalEntryLoading=!1,this.bools.generalNoteLoading=!1}),500)},setInit(){this.splitterModel=100,this.bools.enableEntry=!1,this.bools.generalNoteLoading=!0,this.editNoteInfo=[],this.bools.noteMode=!1,this.fetchClinicalNotes()},setInitEditFields(){this.editNoteInfo=[],this.clinicalEncounterLists=[],this.bools.enableEntry=!1,this.bools.isGeneralInfoOpen=!1,this.selectedNote=null,this.bools.noteMode=!1,this.clinicalNoteInfo.currentTitle=null,this.clinicalNoteInfo.title=null,this.clinicalNoteInfo.name=null,this.clinicalNoteInfo.format=null,this.clinicalNoteInfo.clinicalNoteCode=null,this.clinicalNoteInfo.clinicalCategoryCode=null,this.clinicalNoteInfo.clinicalCategoryName=null},setEntryNotes(e){this.splitterModel=75,this.bools.generalNoteLoading=!0,this.bools.noteMode=!0,this.setClinicalNotes(e),setTimeout((async()=>{this.bools.generalNoteLoading=!1}),500)},async setClinicalNotes(e){void 0!==e.clinicalNoteCode&&(this.editNoteInfo=[]);const t=void 0===e.clinical_note_code?e.clinicalNoteCode:e.clinical_note_code;var i=this.clinicalNotes.filter((e=>e.code===t));this.setClinicalNoteInfo(i[0],!0),this.fetchClinicalNotes()},async setClinicalNoteInfo(e,t){if(this.clinicalNoteInfo.name=e.name,this.clinicalNoteInfo.clinicalNoteCode=e.code,this.clinicalNoteInfo.format=e.template_format,t){let t=void 0===e.template_format.title?null:e.template_format.title;this.clinicalNoteInfo.title=null===t?e.name:t}else{var i=this.clinicalNotes.filter((t=>t.code===e.code));let t=void 0===i[0].template_format.title?null:i[0].template_format.title;this.clinicalNoteInfo.title=null===t?i[0].name:t}},async fetchNotesCategories(){const e={sectionID:"ehr"};await this.$store.dispatch("clinicalNotes/fetchClinicalCategoryNotes",e),await this.$store.dispatch("clinicalNotes/fetchClinicalNoteCategoryTree")},checkPatientType(){"I"===this.encounterCases[0].patient_type?this.clinicalNoteCategoryTree=this.admissionEncounterNotes:this.clinicalNoteCategoryTree=this.visitEncounterNotes},async checkCase(){this.bools.isLoading=!0;const e=await this.$store.dispatch("helpers/decrypt",this.$route.params.caseNo),t={type:"checking",dateFrom:null,dateTo:null,userType:this.userRole,patientType:null,caseNo:e.decrypted,rowsPage:this.clinicalEncountersRows,pageNo:this.clinicalEncountersPage,paginated:1};await this.$store.dispatch("encounters/getCases",t),"emr-checked"===this.$route.name&&(this.bools.isMultipleCaseNo=!1),1===this.encounterCases.length&&(this.bools.isMultipleCaseNo=!1),this.bools.isLoading=!1},async caseRoute(e){const t=await this.$store.dispatch("helpers/encrypt",e);this.$router.push(`/emr/case/${t.encrypted}/checked`)}}});var de=i(4379),ue=i(9100),he=i(7013);const pe=(0,V.Z)(re,[["render",N]]),me=pe;X()(re,"components",{QPage:de.Z,QSpinnerBars:ue.Z,QSpinnerCube:he.Z,QBtn:F.Z})}}]);