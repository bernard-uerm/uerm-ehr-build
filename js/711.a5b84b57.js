"use strict";(self["webpackChunkuerm_ehr"]=self["webpackChunkuerm_ehr"]||[]).push([[711],{8080:(e,t,i)=>{i.r(t),i.d(t,{default:()=>ze});var l=i(3673),o=i(2323);const a={key:0,class:"flex flex-center"},n={key:1},s={key:0},c={key:1,class:"row justify-center"},r=(0,l._)("div",{class:"col-12 text-center text-weight-light text-h5"}," MULTIPLE CASE NUMBER DETECTED, PLEASE SELECT THE APPROPRIATE CASE ",-1),d=[r];function h(e,t,i,r,h,u){const N=(0,l.up)("PatientEncounterInfo"),m=(0,l.up)("MainEMR"),g=(0,l.up)("q-page");return(0,l.wg)(),(0,l.j4)(g,{class:(0,o.C_)({"flex flex-center":e.bools.isMultipleCaseNo})},{default:(0,l.w5)((()=>[this.bools.isLoading?((0,l.wg)(),(0,l.iD)("div",a)):((0,l.wg)(),(0,l.iD)("div",n,[e.bools.isMultipleCaseNo?((0,l.wg)(),(0,l.iD)("div",c,d)):((0,l.wg)(),(0,l.iD)("div",s,[(0,l.Wm)(N,{encounterCases:this.encounterCases,clinicalNoteCategoryTree:this.generalNotes},null,8,["encounterCases","clinicalNoteCategoryTree"]),(0,l.Wm)(m,{clinicalNoteCategories:e.clinicalNoteCategories,clinicalNoteCategoryTree:e.clinicalNoteCategoryTree},null,8,["clinicalNoteCategories","clinicalNoteCategoryTree"])]))]))])),_:1},8,["class"])}var u=i(8880);const N={class:"q-px-lg relative-position"},m={class:"text-weight-light text-h5 row q-gutter-md q-py-md justify-between"},g={class:"col-auto column"},f=(0,l._)("div",{class:"text-xs text-weight-medium"},"PATIENT NAME",-1),p={class:"text-weight-bold"},C={class:"col-auto column"},b=(0,l._)("div",{class:"text-xs text-weight-medium"},"CASE NO",-1),y={class:"text-md"},w={class:"col-auto text-uppercase text-xs text-weight-medium"},_={class:"col text-md text-uppercase"},I={class:"fit row wrap justify-between items-start content-start q-px-md"},E={class:"text-uppercase"},v={class:"q-ml-md q-pa-md"},T={key:0},D={key:0},x={key:0},k={key:1},M=(0,l._)("br",null,null,-1),L=(0,l._)("div",{class:"q-pt-md text-h5 text-overline"}," PLEASE SELECT A CLINICAL NOTE ",-1),Z={class:"row q-mt-md"},q={class:"col-md-9 q-px-sm"},S={class:"col-md-3 q-px-sm"};function W(e,t,i,a,n,s){const c=(0,l.up)("q-separator"),r=(0,l.up)("q-btn"),d=(0,l.up)("q-card-section"),h=(0,l.up)("clinical-note-hierarchy"),W=(0,l.up)("GeneralNoteEntry"),Q=(0,l.up)("q-spinner-ball"),P=(0,l.up)("q-inner-loading"),R=(0,l.up)("q-icon"),$=(0,l.up)("q-splitter"),G=(0,l.up)("q-scroll-area"),O=(0,l.up)("q-card"),A=(0,l.up)("q-dialog"),U=(0,l.up)("ClinicalNotesDashboard"),z=(0,l.up)("PatientChart"),F=(0,l.up)("TestResult"),V=(0,l.up)("PatientInfo"),B=(0,l.up)("q-card-actions");return(0,l.wg)(),(0,l.iD)("div",null,[(0,l._)("div",N,[(0,l._)("div",m,[(0,l._)("div",g,[f,(0,l._)("div",p,(0,o.zw)(`${e.caseInfo.lastname}, ${e.caseInfo.firstname} ${e.caseInfo.middlename}`),1)]),(0,l._)("div",C,[b,(0,l._)("div",y,(0,o.zw)(e.caseInfo.caseno),1)]),((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(e.encounterInfo,(t=>((0,l.wg)(),(0,l.iD)("div",{class:"col-auto column",key:t.label},[(0,l._)("div",w,(0,o.zw)(t.label),1),(0,l._)("div",_,(0,o.zw)(e.caseInfo[t.field]),1)])))),128))]),(0,l.Wm)(c)]),(0,l.Wm)(A,{modelValue:e.bools.isGeneralInfoOpen,"onUpdate:modelValue":t[5]||(t[5]=t=>e.bools.isGeneralInfoOpen=t),persistent:""},{default:(0,l.w5)((()=>[(0,l.Wm)(O,{class:"q-ma-md",style:{height:"100vh","max-width":"100vw"},square:""},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{class:"text-h5 text-weight-light bg-blue-10 text-white"},{default:(0,l.w5)((()=>[(0,l._)("div",I,[(0,l._)("div",E,(0,o.zw)(`${e.caseInfo.lastname}, ${e.caseInfo.firstname} ${e.caseInfo.middlename}`)+" - "+(0,o.zw)(this.clinicalNoteInfo.clinicalCategoryName),1),(0,l.Wm)(r,{color:"negative",label:"Close",onClick:t[0]||(t[0]=(0,u.iM)((t=>e.bools.isGeneralInfoOpen=!1),["prevent"])),icon:"fas fa-times"})])])),_:1}),(0,l.Wm)(G,{class:"q-pa-md",style:{height:"87.5vh",width:"93vw"}},{default:(0,l.w5)((()=>[(0,l.Wm)($,{modelValue:e.splitterModel,"onUpdate:modelValue":t[4]||(t[4]=t=>e.splitterModel=t)},{before:(0,l.w5)((()=>[(0,l._)("div",null,[(0,l.Wm)(h,{clinicalNoteTree:this.clinicalNoteTree,clinicalEncounters:this.clinicalEncounters,onOpenEntryNotes:e.setEntryNotes,onSetUpdateNote:e.setUpdateNote},null,8,["clinicalNoteTree","clinicalEncounters","onOpenEntryNotes","onSetUpdateNote"])])])),after:(0,l.w5)((()=>[(0,l._)("div",v,[(0,l._)("div",{style:{height:"80vh"},class:(0,o.C_)([[this.bools.noteMode?"":"flex flex-center"],"text-center"])},[this.bools.noteMode?((0,l.wg)(),(0,l.iD)("div",T,[this.bools.generalNoteLoading?(0,l.kq)("",!0):((0,l.wg)(),(0,l.iD)("div",D,[null!==this.clinicalNoteInfo.format?((0,l.wg)(),(0,l.iD)("div",x,[e.bools.generalEntryLoading?(0,l.kq)("",!0):((0,l.wg)(),(0,l.j4)(W,{key:0,clinicalNoteInfo:this.clinicalNoteInfo,editNoteInfo:this.editNoteInfo,onCheckGeneralNotes:t[1]||(t[1]=t=>e.fetchGeneralNotes()),onSetClinicalNoteFormat:t[2]||(t[2]=t=>e.setClinicalNotes(this.clinicalNoteInfo)),onGoBackToSelection:t[3]||(t[3]=t=>e.setInit())},null,8,["clinicalNoteInfo","editNoteInfo"]))])):(0,l.kq)("",!0)])),(0,l.Wm)(P,{showing:e.bools.generalNoteLoading},{default:(0,l.w5)((()=>[(0,l.Wm)(Q,{size:"50px",color:"primary"})])),_:1},8,["showing"])])):((0,l.wg)(),(0,l.iD)("div",k,[(0,l.Wm)(R,{name:"fa fa-exclamation-circle",size:"xl"}),M,L]))],2)])])),_:1},8,["modelValue"])])),_:1})])),_:1})])),_:1},8,["modelValue"]),(0,l.Wm)(A,{"full-height":"","full-width":"",persistent:"",modelValue:e.bools.isDialogOpen,"onUpdate:modelValue":t[7]||(t[7]=t=>e.bools.isDialogOpen=t)},{default:(0,l.w5)((()=>[(0,l.Wm)(O,{class:"column"},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{class:"col-auto text-h6 text-weight-light bg-dark text-white"},{default:(0,l.w5)((()=>[(0,l.Uk)(" Patient Dashboard: "+(0,o.zw)(`${e.caseInfo.lastname}, ${e.caseInfo.firstname} ${e.caseInfo.middlename}`),1)])),_:1}),(0,l.Wm)(d,{class:"col",style:{overflow:"auto"}},{default:(0,l.w5)((()=>[(0,l._)("div",Z,[(0,l._)("div",q,[(0,l.Wm)(U,{currentClinicalNotes:this.clinicalEncounterLists},null,8,["currentClinicalNotes"]),(0,l.Wm)(z,{patientno:e.caseInfo.patientno},null,8,["patientno"]),(0,l.Wm)(F,{patientno:e.caseInfo.patientno},null,8,["patientno"])]),(0,l._)("div",S,[(0,l.Wm)(V,{patientno:e.caseInfo.patientno},null,8,["patientno"])])])])),_:1}),(0,l.Wm)(B,{align:"right",class:"col-auto"},{default:(0,l.w5)((()=>[(0,l.Wm)(r,{color:"negative",label:"Close",flat:"",onClick:t[6]||(t[6]=(0,u.iM)((t=>e.bools.isDialogOpen=!1),["prevent"])),icon:"fas fa-times"})])),_:1})])),_:1})])),_:1},8,["modelValue"])])}var Q=i(303),P=i(7198),R=i(250);const $={class:"row"},G={key:0,class:"bg-red-2 q-pa-md"},O={class:"row justify-between items-center"},A={class:"column"},U=(0,l._)("div",{class:"text-xs"},"RESULT DATE",-1),z={class:"absolute-top-right"},F={class:"row justify-between"},V={class:"text-uppercase"};function B(e,t,i,a,n,s){const c=(0,l.up)("Heading"),r=(0,l.up)("q-btn"),d=(0,l.up)("q-scroll-area"),h=(0,l.up)("q-card-section"),u=(0,l.up)("q-card"),N=(0,l.up)("q-dialog");return(0,l.wg)(),(0,l.iD)("div",null,[(0,l.Wm)(c,{text:"Clinical Notes"}),(0,l.Wm)(d,{style:{height:"110px"},visible:""},{default:(0,l.w5)((()=>[(0,l._)("div",$,[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(this.currentClinicalNotes,(t=>((0,l.wg)(),(0,l.iD)("div",{class:"col-auto",key:t},[(0,l.Wm)(r,{label:t.clinical_note+" - "+t.user_name.toUpperCase()+" - "+new Date(t.update_datetime).toDateString().substring(4,15),flat:"",rounded:"",icon:"fas fa-eye",color:"primary",onClick:i=>e.openClinicalNoteDialog(t)},null,8,["label","onClick"])])))),128))]),0!=e.currentClinicalNotes.length||e.bools.isLoading?(0,l.kq)("",!0):((0,l.wg)(),(0,l.iD)("div",G," No result Available "))])),_:1}),this.clinicalNoteResult.length>0?((0,l.wg)(),(0,l.j4)(N,{key:0,modelValue:this.bools.clinicalNoteDialog,"onUpdate:modelValue":t[1]||(t[1]=e=>this.bools.clinicalNoteDialog=e),persistent:""},{default:(0,l.w5)((()=>[(0,l.Wm)(u,{square:"",style:{width:"700px","max-width":"80vw"}},{default:(0,l.w5)((()=>[(0,l.Wm)(h,{class:"text-h5 text-weight-light bg-dark text-white"},{default:(0,l.w5)((()=>[(0,l._)("div",O,[(0,l._)("div",null,(0,o.zw)(this.clinicalNoteCardDetails.title),1),(0,l._)("div",A,[U,(0,l._)("div",null,(0,o.zw)(new Date(this.clinicalNoteCardDetails.datetime).toDateString().substring(4,15)),1)])]),(0,l._)("div",z,[(0,l.Wm)(r,{flat:"",round:"",icon:"fa fa-times",onClick:t[0]||(t[0]=t=>e.bools.clinicalNoteDialog=!1),color:"negative"})])])),_:1}),(0,l.Wm)(h,{style:{height:"540px"}},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{class:"fit",visible:""},{default:(0,l.w5)((()=>[((0,l.wg)(!0),(0,l.iD)(l.HY,null,(0,l.Ko)(this.clinicalNoteResult,(e=>((0,l.wg)(),(0,l.iD)("div",{class:"q-pb-md",key:e.label},[(0,l.Wm)(c,{text:e.opts.label},null,8,["text"]),(0,l.Wm)(u,{class:"shadow-0 q-pa-md"},{default:(0,l.w5)((()=>[(0,l._)("div",null,(0,o.zw)(e.value),1)])),_:2},1024)])))),128))])),_:1})])),_:1}),(0,l.Wm)(h,{class:"text-h5 text-weight-light bg-dark text-white"},{default:(0,l.w5)((()=>[(0,l._)("div",F,[(0,l._)("div",V,(0,o.zw)(this.clinicalNoteCardDetails.user),1)])])),_:1})])),_:1})])),_:1},8,["modelValue"])):(0,l.kq)("",!0)])}var H=i(4019);const j=(0,l.aZ)({name:"ClinicalNoteDashboard",props:["currentClinicalNotes"],components:{Heading:H.Z},data(){return{bools:{isLoading:!1,clinicalNoteDialog:!1},clinicalNoteResult:[],clinicalNoteCardDetails:{title:"",user:"",datetime:""}}},methods:{openClinicalNoteDialog(e){this.clinicalNoteCardDetails.title=e.clinical_note,this.clinicalNoteCardDetails.user=e.user_name,this.clinicalNoteCardDetails.datetime=e.formattedUpdateDatetime,this.clinicalNoteResult=e.result_format.fields,this.bools.clinicalNoteDialog=!0}}});var Y=i(4260),K=i(7704),J=i(2165),X=i(6778),ee=i(151),te=i(5589),ie=i(7518),le=i.n(ie);const oe=(0,Y.Z)(j,[["render",B]]),ae=oe;le()(j,"components",{QScrollArea:K.Z,QBtn:J.Z,QDialog:X.Z,QCard:ee.Z,QCardSection:te.Z});var ne=i(3617),se=i(4241);const ce=(0,l.aZ)({name:"MainTableEMR",props:["clinicalNote","columnTable","rowTable"],data(){return{columns:[{name:"desc",required:!0,label:"Dessert (100g serving)",align:"left",field:e=>e.name,format:e=>`${e}`,sortable:!0},{name:"calories",align:"center",label:"Calories",field:"calories",sortable:!0},{name:"fat",label:"Fat (g)",field:"fat",sortable:!0},{name:"carbs",label:"Carbs (g)",field:"carbs"}],rows:[{name:"Ice cream sandwich",calories:237,fat:9,carbs:37},{name:"Eclair",calories:262,fat:16,carbs:23},{name:"Cupcake",calories:305,fat:3.7,carbs:67},{name:"Frozen Yogurt",calories:159,fat:6,carbs:24},{name:"Ice cream sandwich",calories:237,fat:9,carbs:37},{name:"Eclair",calories:262,fat:16,carbs:23},{name:"Cupcake",calories:305,fat:3.7,carbs:67},{name:"Cupcake",calories:305,fat:3.7,carbs:67},{name:"Frozen Yogurt",calories:159,fat:6,carbs:24},{name:"Ice cream sandwich",calories:237,fat:9,carbs:37},{name:"Eclair",calories:262,fat:16,carbs:23},{name:"Cupcake",calories:305,fat:3.7,carbs:67},{name:"Cupcake",calories:305,fat:3.7,carbs:67},{name:"Frozen Yogurt",calories:159,fat:6,carbs:24},{name:"Ice cream sandwich",calories:237,fat:9,carbs:37},{name:"Eclair",calories:262,fat:16,carbs:23},{name:"Cupcake",calories:305,fat:3.7,carbs:67}],filter:""}},mounted(){},methods:{openNoteMode(){this.$emit("openNoteMode",!0)}}});var re=i(8107),de=i(4842),he=i(4554);le()(ce,"components",{QTable:re.Z,QBtn:J.Z,QInput:de.Z,QIcon:he.Z});var ue=i(8008);const Ne=(0,l.aZ)({name:"PatientEncounterInfo",props:["clinicalNoteCategoryTree"],components:{PatientChart:Q.Z,TestResult:P.Z,PatientInfo:R.Z,ClinicalNotesDashboard:ae,GeneralNoteEntry:se.Z,ClinicalNoteHierarchy:ue.Z},data(){return{tab:"generalInfo",bools:{isDialogOpen:!1,isGeneralInfoOpen:!1,generalNoteLoading:!1,generalEntryLoading:!1,enableEntry:!1,noteMode:!1},selectedNote:[],boolean:!0,clinicalNotesLists:[],clinicalEncounterLists:[],clinicalEncounterListsColors:["bg-blue-6","bg-blue-7","bg-blue-8","bg-blue-9","bg-blue-10"],details:{caseNo:null,name:null,birthdate:null,sex:null,patientCategory:null,chiefComplaint:null},clinicalNoteInfo:{currentTitle:null,title:null,name:null,format:null,clinicalNoteCode:null,clinicalCategoryCode:null,clinicalCategoryName:null,clinicalNotes:[]},editNoteInfo:[],encounterInfo:[{label:"Category",field:"category"},{label:"Room",field:"room"},{label:"Unit",field:"unit"},{label:"Ward",field:"ward"},{label:"Admission Date",field:"admitted"},{label:"Discharge Date",field:"discharged"},{label:"Chief Complaint",field:"chiefComplaint"}],generalDataNotes:[],splitterModel:70,splitterModel2:30,columnTable:[],rowTable:[],clinicalNoteTable:[],clinicalNoteTree:[]}},computed:{...(0,ne.Se)({encounterCases:"encounters/encounterCases",clinicalEncounters:"encounters/clinicalEncounters",generalNotes:"clinicalNotes/generalNotes",clinicalNotes:"clinicalNotes/clinicalNotes",patientGeneralNotes:"encounters/patientGeneralNotes"}),caseInfo(){return 0==this.encounterCases.length?{}:this.encounterCases.map((e=>({caseno:e.case_no,patientno:e.patient_no,lastname:e.last_name,firstname:e.first_name,middlename:e.middle_name,gender:e.sex,birthdate:e.birthDate,category:e.patient_category,room:e.room,unit:e.room_unit,ward:e.ward,admitted:new Date(e.datetime_admitted).toDateString(),discharged:e.datetime_discharged?new Date(e.datetime_discharged).toDateString():"",chiefComplaint:e.chief_complaint})))[0]}},created(){this.initialize()},methods:{async initialize(){this.generalDataNotes=this.generalNotes,this.clinicalTabLoading=!1},nodeMode(){this.bools.noteMode=!0},setEntryNotes(e){this.bools.generalNoteLoading=!0,this.bools.noteMode=!0,this.setClinicalNotes(e),setTimeout((async()=>{this.bools.generalNoteLoading=!1}),500)},async openGeneralDataDialog(e){this.bools.isGeneralInfoOpen=!0,this.bools.generalNoteLoading=!0,this.clinicalNoteInfo.clinicalCategoryCode=e.code,this.clinicalNoteInfo.clinicalCategoryName=e.name;var t=this.clinicalNoteCategoryTree.filter((t=>t.code===e.code));this.clinicalNoteTree=t,setTimeout((async()=>{console.log(e),this.clinicalNotesLists=e.children,this.fetchGeneralNotes()}),500)},async setClinicalNotes(e){void 0!==e.clinicalNoteCode&&(this.editNoteInfo=[]);const t=void 0===e.clinical_note_code?e.clinicalNoteCode:e.clinical_note_code;var i=this.clinicalNotes.filter((e=>e.code===t));this.setClinicalNoteInfo(i[0],!0),this.fetchGeneralNotes()},async setClinicalNoteInfo(e,t){if(this.clinicalNoteInfo.name=e.name,this.clinicalNoteInfo.clinicalNoteCode=e.code,this.clinicalNoteInfo.format=e.template_format,t){let t=void 0===e.template_format.title?null:e.template_format.title;this.clinicalNoteInfo.title=null===t?e.name:t}else{var i=this.clinicalNotes.filter((t=>t.code===e.code));let t=void 0===i[0].template_format.title?null:i[0].template_format.title;this.clinicalNoteInfo.title=null===t?i[0].name:t}},async fetchGeneralNotes(){let e="";e={patientNo:this.encounterCases[0].patientID,clinicalCategoryCode:this.clinicalNoteInfo.clinicalCategoryCode,checking:!0,byCategoryCode:!0},await this.$store.dispatch("encounters/getClinicalEncounters",e),this.clinicalEncounterLists=this.clinicalEncounters,this.bools.generalNoteLoading=!1},setInit(){this.bools.enableEntry=!1,this.bools.generalNoteLoading=!0,this.editNoteInfo=[],this.bools.noteMode=!1,this.fetchGeneralNotes()},setUpdateNote(e){this.bools.noteMode=!0,this.bools.enableEntry=!0;const t={clinical_note_code:e.clinical_note_code,clinical_note:e.clinical_note_name,result_format:JSON.parse(e.result_format),clinical_encounter_id:parseInt(e.clinical_encounter_id)};this.setPatientNotes(t)},setPatientNotes(e){this.bools.generalEntryLoading=!0,this.bools.generalNoteLoading=!0,setTimeout((()=>{this.editNoteInfo=e;const t={name:e.clinical_note,code:e.clinical_note_code,template_format:e.result_format,title:e.clinical_note};this.setClinicalNoteInfo(t,!1),this.bools.generalEntryLoading=!1,this.bools.generalNoteLoading=!1}),500)},setInitEditFields(){this.editNoteInfo=[],this.clinicalEncounterLists=[],this.bools.enableEntry=!1,this.bools.isGeneralInfoOpen=!1,this.selectedNote=null,this.bools.noteMode=!1,this.clinicalNoteInfo.currentTitle=null,this.clinicalNoteInfo.title=null,this.clinicalNoteInfo.name=null,this.clinicalNoteInfo.format=null,this.clinicalNoteInfo.clinicalNoteCode=null,this.clinicalNoteInfo.clinicalCategoryCode=null,this.clinicalNoteInfo.clinicalCategoryName=null}},watch:{selectedNote(e){null!==e&&this.setClinicalNotes(e)},bools:{async handler(e){e.isGeneralInfoOpen||this.setInitEditFields()},deep:!0}}});var me=i(7547),ge=i(8408),fe=i(5906),pe=i(6602),Ce=i(8870),be=i(5869),ye=i(218),we=i(6941),_e=i(1070),Ie=i(9367),Ee=i(6489);const ve=(0,Y.Z)(Ne,[["render",W]]),Te=ve;le()(Ne,"components",{QTabs:me.Z,QTab:ge.Z,QTabPanels:fe.Z,QTabPanel:pe.Z,QCard:ee.Z,QCardSection:te.Z,QIcon:he.Z,QBtn:J.Z,QTooltip:Ce.Z,QSeparator:be.Z,QDialog:X.Z,QScrollArea:K.Z,QSplitter:ye.Z,QInnerLoading:we.Z,QSpinnerBall:_e.Z,QCardActions:Ie.Z}),le()(Ne,"directives",{Ripple:Ee.Z});const De={class:"bg-transparent"},xe={class:"q-ml-md q-pb-md q-px-md"},ke={key:0},Me={key:0},Le={key:0},Ze={key:1},qe=(0,l._)("br",null,null,-1),Se=(0,l._)("div",{class:"q-pt-md text-h5 text-overline"}," PLEASE SELECT A CLINICAL NOTE ",-1);function We(e,t,i,a,n,s){const c=(0,l.up)("clinical-note-hierarchy"),r=(0,l.up)("GeneralNoteEntry"),d=(0,l.up)("q-spinner-ball"),h=(0,l.up)("q-inner-loading"),u=(0,l.up)("q-icon"),N=(0,l.up)("q-splitter"),m=(0,l.up)("q-card-section"),g=(0,l.up)("q-card");return(0,l.wg)(),(0,l.iD)("div",null,[(0,l._)("div",De,[(0,l.Wm)(g,{square:""},{default:(0,l.w5)((()=>[(0,l.Wm)(m,null,{default:(0,l.w5)((()=>[(0,l._)("div",null,[(0,l.Wm)(N,{modelValue:e.splitterModel,"onUpdate:modelValue":t[3]||(t[3]=t=>e.splitterModel=t)},(0,l.Nv)({before:(0,l.w5)((()=>[(0,l.Wm)(c,{clinicalNoteTree:this.clinicalNoteCat,clinicalEncounters:this.clinicalEncounters,loadTree:this.bools.loadTree,noteMode:this.bools.noteMode,onOpenEntryNotes:e.setEntryNotes,onSetUpdateNote:e.setUpdateNote},null,8,["clinicalNoteTree","clinicalEncounters","loadTree","noteMode","onOpenEntryNotes","onSetUpdateNote"])])),_:2},[this.bools.noteMode?{name:"after",fn:(0,l.w5)((()=>[(0,l._)("div",xe,[(0,l._)("div",{style:{height:"69vh"},class:(0,o.C_)([[this.bools.noteMode?"":"flex flex-center"],"text-center"])},[this.bools.noteMode?((0,l.wg)(),(0,l.iD)("div",ke,[this.bools.generalNoteLoading?(0,l.kq)("",!0):((0,l.wg)(),(0,l.iD)("div",Me,[null!==this.clinicalNoteInfo.format?((0,l.wg)(),(0,l.iD)("div",Le,[e.bools.generalEntryLoading?(0,l.kq)("",!0):((0,l.wg)(),(0,l.j4)(r,{key:0,clinicalNoteInfo:this.clinicalNoteInfo,editNoteInfo:this.editNoteInfo,onCheckGeneralNotes:t[0]||(t[0]=t=>e.fetchClinicalNotes()),onSetClinicalNoteFormat:t[1]||(t[1]=t=>e.setClinicalNotes(this.clinicalNoteInfo)),onGoBackToSelection:t[2]||(t[2]=t=>e.setInit())},null,8,["clinicalNoteInfo","editNoteInfo"]))])):(0,l.kq)("",!0)])),(0,l.Wm)(h,{showing:e.bools.generalNoteLoading},{default:(0,l.w5)((()=>[(0,l.Wm)(d,{size:"50px",color:"primary"})])),_:1},8,["showing"])])):((0,l.wg)(),(0,l.iD)("div",Ze,[(0,l.Wm)(u,{name:"fa fa-exclamation-circle",size:"xl"}),qe,Se]))],2)])]))}:{name:"after",fn:(0,l.w5)((()=>[]))}]),1032,["modelValue"])])])),_:1})])),_:1})])])}i(71);const Qe=(0,l.aZ)({name:"MainEMR",props:["clinicalNoteCategories","clinicalNoteCategoryTree"],data(){return{tab:"clinicalNotes",bools:{showInputFields:!1,loadTree:!1,isDialogOpen:!1,isGeneralInfoOpen:!1,generalNoteLoading:!1,generalEntryLoading:!1,enableEntry:!1,noteMode:!1},splitterModel:100,splitterMobileModel:25,mobileTabShow:!1,clinicalTabs:"",search:"",selectionMenu:!1,clinicalNoteCat:[],clinicalNoteHistory:[],clinicalTabLoading:!1,selected:"",filter:"",filterRef:null,clinicalNoteInfo:{currentTitle:null,title:null,name:null,format:null,clinicalNoteCode:null,clinicalCategoryCode:null,clinicalCategoryName:null,clinicalNotes:[]},editNoteInfo:[]}},computed:{...(0,ne.Se)({colorEMR:"helpers/colorEMR",clinicalNotes:"clinicalNotes/clinicalNotes",infiniteScroll:"helpers/infiniteScroll",clinicalEncounters:"encounters/clinicalEncounters",userRole:"helpers/userRole",clinicalEncountersPage:"encounters/clinicalEncountersPage",clinicalEncountersRows:"encounters/clinicalEncountersRows",encounterCases:"encounters/encounterCases",clinicalCategoryNotes:"clinicalNotes/clinicalCategoryNotes",clinicalNoteDetails:"clinicalNotes/clinicalNoteDetails"})},watch:{clinicalNoteCategoryTree(e){this.clinicalNoteCat=this.clinicalNoteCategoryTree},clinicalCategoryNotes(e){this.clinicalNoteCat=e},async clinicalTabs(e){await this.getClinicalNotes(e)},clinicalNoteCat(e){e.length>0&&(this.clinicalTabs=e[0].categoryCode)},tab(e){this.showClinicalDetails(e),this.checkCase()},splitterModel(e){90===e&&(this.splitterModel=100)}},async mounted(){await this.formatClinicalNoteCategoryTree(),await this.fetchClinicalNotes()},methods:{async formatClinicalNoteCategoryTree(){this.bools.loadTree=!0,setTimeout((async()=>{this.bools.loadTree=!1}),1500),this.clinicalNoteCat=this.clinicalNoteCategoryTree},async fetchClinicalNotes(){let e="";e={patientNo:this.encounterCases[0].patientID,clinicalCategoryCode:null,checking:!0,byCategoryCode:!1},await this.$store.dispatch("encounters/getClinicalEncounters",e),this.clinicalEncounterLists=this.clinicalEncounters,this.bools.generalNoteLoading=!1},setUpdateNote(e){this.splitterModel=75,this.bools.noteMode=!0,this.bools.enableEntry=!0;const t={clinical_note_code:e.clinical_note_code,clinical_note:e.clinical_note_name,result_format:JSON.parse(e.result_format),clinical_encounter_id:parseInt(e.clinical_encounter_id)};this.setPatientNotes(t)},setPatientNotes(e){this.bools.generalEntryLoading=!0,this.bools.generalNoteLoading=!0,setTimeout((()=>{this.editNoteInfo=e;const t={name:e.clinical_note,code:e.clinical_note_code,template_format:e.result_format,title:e.clinical_note};this.setClinicalNoteInfo(t,!1),this.bools.generalEntryLoading=!1,this.bools.generalNoteLoading=!1}),500)},setInit(){this.splitterModel=100,this.bools.enableEntry=!1,this.bools.generalNoteLoading=!0,this.editNoteInfo=[],this.bools.noteMode=!1,this.fetchClinicalNotes()},setInitEditFields(){this.editNoteInfo=[],this.clinicalEncounterLists=[],this.bools.enableEntry=!1,this.bools.isGeneralInfoOpen=!1,this.selectedNote=null,this.bools.noteMode=!1,this.clinicalNoteInfo.currentTitle=null,this.clinicalNoteInfo.title=null,this.clinicalNoteInfo.name=null,this.clinicalNoteInfo.format=null,this.clinicalNoteInfo.clinicalNoteCode=null,this.clinicalNoteInfo.clinicalCategoryCode=null,this.clinicalNoteInfo.clinicalCategoryName=null},setEntryNotes(e){this.splitterModel=75,this.bools.generalNoteLoading=!0,this.bools.noteMode=!0,this.setClinicalNotes(e),setTimeout((async()=>{this.bools.generalNoteLoading=!1}),500)},async setClinicalNotes(e){void 0!==e.clinicalNoteCode&&(this.editNoteInfo=[]);const t=void 0===e.clinical_note_code?e.clinicalNoteCode:e.clinical_note_code;var i=this.clinicalNotes.filter((e=>e.code===t));this.setClinicalNoteInfo(i[0],!0),this.fetchClinicalNotes()},async setClinicalNoteInfo(e,t){if(this.clinicalNoteInfo.name=e.name,this.clinicalNoteInfo.clinicalNoteCode=e.code,this.clinicalNoteInfo.format=e.template_format,t){let t=void 0===e.template_format.title?null:e.template_format.title;this.clinicalNoteInfo.title=null===t?e.name:t}else{var i=this.clinicalNotes.filter((t=>t.code===e.code));let t=void 0===i[0].template_format.title?null:i[0].template_format.title;this.clinicalNoteInfo.title=null===t?i[0].name:t}},async showClinicalDetails(e){var t="";for(var i of this.clinicalCategoryNotes){const l=i.children.filter((t=>t.label===e));if(void 0!==l[0]){const e={name:l[0].label,code:l[0].clinical_note_code,categoryCode:l[0].clinical_category,details:l[0]};t=e}else{const t=this.clinicalNoteCategories.filter((t=>t.label===e));t}}console.log(t),""!==t&&(await this.getClinicalNoteDetails(t.code),this.clinicalNoteDetails.length>0&&(this.bools.showInputFields=!0))},async scrollToTop(){this.$refs.scrollArea.setScrollPosition("vertical",1),await this.$store.dispatch("helpers/setInfiniteScroll",!0),await this.checkCase()},async selectSubgroup(){const e=!this.selectionMenu;this.selectionMenu=e},filterCN(e){const t=e.toUpperCase();var i=this.clinicalNoteCategories.filter((e=>e.filterName.includes(t)));this.clinicalNoteCat=i,0===i.length&&(this.clinicalTabs=[])},async fetchClinicalNotesCategories(){await this.$store.dispatch("clinicalNotes/fetchClinicalCategories"),this.clinicalNoteCat=this.clinicalNoteCategories},async getClinicalNotes(e){this.loadingTabs=!0;const t={sectionType:"ehr"};await this.$store.dispatch("clinicalNotes/fetchClinicalNotes",t),this.loadingTabs=!1},async checkCase(){this.clinicalTabLoading=!0;const e=await this.$store.dispatch("helpers/decrypt",this.$route.params.caseNo),t={type:"checking",dateFrom:null,dateTo:null,userType:this.userRole,patientType:null,caseNo:e.decrypted};await this.$store.dispatch("encounters/getCases",t);const i={caseNo:e.decrypted,rowsPage:this.clinicalEncountersRows,pageNo:this.clinicalEncountersPage,patientNo:this.encounterCases[0].patient_no,clinicalNotecode:this.clinicalNoteDetails[0].clinical_note_code};await this.$store.dispatch("encounters/getClinicalEncounters",i);var l=this.clinicalEncounters.filter((e=>e.clinical_note_category_id===this.clinicalTabs));this.clinicalNoteHistory=l,this.clinicalTabLoading=!1},async getClinicalNoteDetails(e){console.log(e,"clinicalNoteCode"),await this.$store.dispatch("clinicalNotes/fetchClinicalNoteDetails",e)}},components:{ClinicalNoteHierarchy:ue.Z,GeneralNoteEntry:se.Z}});var Pe=i(4103);const Re=(0,Y.Z)(Qe,[["render",We]]),$e=Re;le()(Qe,"components",{QCard:ee.Z,QCardSection:te.Z,QSplitter:ye.Z,QSkeleton:Pe.ZP,QTabs:me.Z,QTab:ge.Z,QSeparator:be.Z,QTabPanels:fe.Z,QTabPanel:pe.Z,QInnerLoading:we.Z,QSpinnerBall:_e.Z,QIcon:he.Z});const Ge=(0,l.aZ)({name:"EMR",components:{PatientEncounterInfo:Te,MainEMR:$e},data(){return{bools:{isMultipleCaseNo:!0,isLoading:!1},clinicalNoteCategoryTree:[]}},computed:{...(0,ne.Se)({visitEncounterNotes:"clinicalNotes/visitEncounterNotes",admissionEncounterNotes:"clinicalNotes/admissionEncounterNotes",generalNotes:"clinicalNotes/generalNotes",rightDrawer:"helpers/drawerRight",colorEMR:"helpers/colorEMR",clinicalNoteCategories:"clinicalNotes/clinicalNoteCategories",showClinicalNoteDetails:"helpers/showClinicalNoteDetails",userRole:"helpers/userRole",encounterCases:"encounters/encounterCases",clinicalNotes:"clinicalNotes/clinicalNotes",infiniteScroll:"helpers/infiniteScroll",clinicalEncountersPage:"encounters/clinicalEncountersPage",clinicalEncountersRows:"encounters/clinicalEncountersRows"})},mounted(){this.mountFunctions()},methods:{async mountFunctions(){await this.checkCase(),await this.fetchNotesCategories(),await this.checkPatientType()},async fetchNotesCategories(){const e={sectionID:"ehr"};await this.$store.dispatch("clinicalNotes/fetchClinicalCategoryNotes",e),await this.$store.dispatch("clinicalNotes/fetchClinicalNoteCategoryTree")},checkPatientType(){"I"===this.encounterCases[0].patient_type?this.clinicalNoteCategoryTree=this.admissionEncounterNotes:this.clinicalNoteCategoryTree=this.visitEncounterNotes},async checkCase(){this.bools.isLoading=!0;const e=await this.$store.dispatch("helpers/decrypt",this.$route.params.caseNo),t={type:"checking",dateFrom:null,dateTo:null,userType:this.userRole,patientType:null,caseNo:e.decrypted,rowsPage:this.clinicalEncountersRows,pageNo:this.clinicalEncountersPage,paginated:1};await this.$store.dispatch("encounters/getCases",t),"emr-checked"===this.$route.name&&(this.bools.isMultipleCaseNo=!1),1===this.encounterCases.length&&(this.bools.isMultipleCaseNo=!1),this.bools.isLoading=!1},async caseRoute(e){const t=await this.$store.dispatch("helpers/encrypt",e);this.$router.push(`/emr/case/${t.encrypted}/checked`)}}});var Oe=i(4379),Ae=i(9100);const Ue=(0,Y.Z)(Ge,[["render",h]]),ze=Ue;le()(Ge,"components",{QPage:Oe.Z,QSpinnerBars:Ae.Z,QBtn:J.Z})}}]);